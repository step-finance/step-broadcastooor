version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.1.3
  aws-ecs: circleci/aws-ecs@3.2.0

executors:
  custom:
    machine:
      image: ubuntu-2204:2022.04.2
    resource_class: xlarge

jobs:
  lint:
    docker:
      - image: rust:1.73
    environment:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: "Install rustfmt"
          command: "rustup component add rustfmt && rustup component add clippy"
      - run:
          name: "Format rust code"
          command: "cargo fmt --all -- --check"
      - run:
          name: "Check rust code"
          command: "cargo clippy -- -D warnings --warn clippy::all"
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
  test:
    docker:
      - image: rust:1.73
    environment:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: "Unit tests"
          command: "cargo test"
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
  build:
    docker:
      - image: rust:1.73
    resource_class: xlarge
    environment:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: "Build check"
          command: "cargo check --release"
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v1-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}

workflows:
  run-pipeline:
    jobs:
      # Lint, test and build checks
      - lint:
          filters:
            branches:
              ignore:
                - main
                - develop
      - test:
          requires:
            - lint
          filters:
            branches:
              ignore:
                - main
                - develop
      - build:
          requires:
            - lint
            - test
          filters:
            branches:
              ignore:
                - main
                - develop

      # Build and push image to ECR
      - aws-ecr/build-and-push-image:
          executor: custom
          repo: step-broadcastooor
          region: eu-north-1
          tag: ${CIRCLE_BRANCH},${CIRCLE_BRANCH}-<< pipeline.number >>,${CIRCLE_BRANCH}-<< pipeline.number >>-${CIRCLE_SHA1}
          context: aws-account
          filters:
            branches:
              only:
                - main
                - develop

      # Pre update (no hold required)
      - aws-ecs/deploy-service-update:
          cluster: "pre-services-cluster"
          family: "pre-broadcastooor"
          service-name: "pre-broadcastooor-service"
          container-env-var-updates: container=pre-broadcastooor-container,name=STEP_VERSION,value=${CIRCLE_BRANCH}-<< pipeline.number >>-${CIRCLE_SHA1}
          container-image-name-updates: container=pre-broadcastooor-container,tag=${CIRCLE_BRANCH}-<< pipeline.number >>-${CIRCLE_SHA1}
          enable-circuit-breaker: true
          force-new-deployment: true
          context: aws-account
          requires:
            - aws-ecr/build-and-push-image
          filters:
            branches:
              only:
                - develop

      # Live hold and update
      - hold-live:
          type: approval
          requires:
            - aws-ecr/build-and-push-image
          filters:
            branches:
              only:
                - main
      - aws-ecs/deploy-service-update:
          cluster: "live-services-cluster"
          family: "live-broadcastooor"
          service-name: "live-broadcastooor-service"
          container-env-var-updates: container=live-broadcastooor-container,name=STEP_VERSION,value=${CIRCLE_BRANCH}-<< pipeline.number >>-${CIRCLE_SHA1}
          container-image-name-updates: container=live-broadcastooor-container,tag=${CIRCLE_BRANCH}-<< pipeline.number >>-${CIRCLE_SHA1}
          enable-circuit-breaker: true
          force-new-deployment: true
          context: aws-account
          requires:
            - aws-ecr/build-and-push-image
            - hold-live
          filters:
            branches:
              only:
                - main
